name: deploy

on:
  pull_request:
    branches: [master]

  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - uses: pnpm/action-setup@v4

      - run: pnpm i

      - run: pnpm build

      - run: tar -czf site-dist.tar.gz dist

      - uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "site-dist.tar.gz"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/node_modules/, /.git/, /.github/"
          SCRIPT_BEFORE: |
            whoami
            echo "üöÄ Starting deployment..."
            ls -al ${{ secrets.REMOTE_TARGET }}
            # Ê£ÄÊü• Docker ÁéØÂ¢É
            docker --version
            docker ps | grep site || echo "Container site not found"
          SCRIPT_AFTER: |
            whoami
            echo "üì¶ Files deployed to staging area:"
            ls -al ${{ secrets.REMOTE_TARGET }}
            echo "üìä Rsync output:"
            echo $RSYNC_STDOUT

            VOLUME_PATH=$(docker volume inspect shared_volume --format '{{.Mountpoint}}')
            echo "üê≥ Deploying to Docker volume: $VOLUME_PATH"

            echo "‚úÖ Deployment to Docker container completed!"
